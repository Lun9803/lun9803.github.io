{"version":3,"sources":["palette.js","containers/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["black","white","useStyles","makeStyles","root","display","height","overflow","left","width","background","textAlign","color","right","text","fontSize","letterSpacing","margin","Home","classes","squares","useRef","useState","renderedSquare","setRenderedSquare","useEffect","current","setInterval","maxSize","minSize","windowWidth","window","innerWidth","square","size","Math","floor","random","velocity","x","y","rotation","push","generateSquare","currentSquares","i","length","s","innerHeight","splice","renderSquare","className","Typography","map","style","transform","position","top","border","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAaA,EAAQ,UACRC,EAAQ,UCIfC,EAAYC,YAAW,CACzBC,KAAM,CACPC,QAAQ,OACRC,OAAO,QACPC,SAAS,WAEVC,KAAK,CACJC,MAAM,MACNC,WAAWV,EACXW,UAAU,MACVC,MAAMX,GAEPY,MAAM,CACLJ,MAAM,MACNC,WAAWT,EACXW,MAAMZ,GAEPc,KAAK,CACJC,SAAS,GACTC,cAAc,EACdC,OAAO,eA8DKC,MAzDf,WACC,IAAMC,EAAUjB,IACVkB,EAAUC,mBAFD,EAG6BC,qBAH7B,mBAGRC,EAHQ,KAGQC,EAHR,KAsCd,OAVDC,qBAAU,WACTL,EAAQM,QAAU,GAClBC,aAAY,YAfU,SAAC,EAAyBP,GAAa,IAAD,IAApCQ,eAAoC,MAA5B,GAA4B,MAAxBC,eAAwB,MAAhB,GAAgB,EAExDC,EAAcC,OAAOC,WACrBC,EAAS,CACZC,KAAMC,KAAKC,MAAM,GAAGD,KAAKE,UAAUT,EAAQC,IAC3CS,SAJc,GAKdC,EAAGJ,KAAKC,OAAON,EAAYF,GAASO,KAAKE,UACzCG,EAAE,EACFC,SAASN,KAAKC,MAAM,IAAID,KAAKE,WAE9BjB,EAAQsB,KAAKT,GAMZU,CAAe,GAAGvB,EAAQM,WACzB,KACFC,aAAY,YA5BQ,SAACiB,GACrB,IAAI,IAAIC,EAAE,EAAGA,EAAED,EAAeE,OAAQD,IAAI,CACzC,IAAIE,EAAIH,EAAeC,GACvBE,EAAEN,UAAY,GACdM,EAAEP,GAAKO,EAAET,SACLS,EAAEP,EAAEO,EAAEb,KAAgB,IAAXa,EAAET,UAAeP,OAAOiB,aAAYJ,EAAeK,OAAOJ,EAAE,GAE5ErB,EAAkB,YAAIoB,IAsBrBM,CAAa9B,EAAQM,WACpB,MACA,IAGA,sBAAKyB,UAAWhC,EAAQf,KAAxB,UACD,qBAAK+C,UAAWhC,EAAQX,KAAxB,SACC,cAAC4C,EAAA,EAAD,CAAYD,UAAWhC,EAAQL,KAA/B,qBAED,qBAAMqC,UAAWhC,EAAQN,MAAzB,SACC,cAACuC,EAAA,EAAD,CAAYD,UAAWhC,EAAQL,KAA/B,uBAGAS,GAAkBA,EAAe8B,KAAI,SAACN,EAAEF,GAAH,OACpC,qBAAwBS,MAAO,CAACC,UAAU,UAAD,OAAWR,EAAEN,SAAb,QAA4Be,SAAS,WAAWlD,OAAOyC,EAAEb,KAAKzB,MAAMsC,EAAEb,KAAK1B,KAAKuC,EAAER,EAAEkB,IAAIV,EAAEP,EAAE9B,WAAW,OAAOgD,OAAO,oBAA9J,gBAAmBb,WCzDTc,MAZf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAZ,SACE,cAAC,EAAD,WCFKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a4ad9bef.chunk.js","sourcesContent":["export const black = '#171111'\r\nexport const white = '#fff5f5'","import React, {useEffect, useState,useRef} from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Typography } from '@material-ui/core'\r\nimport {black, white} from '../../palette'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n\t\t\tdisplay:'flex',\r\n\t\t\theight:'100vh',\r\n\t\t\toverflow:'visible'\r\n\t\t},\r\n\t\tleft:{\r\n\t\t\twidth:'50%',\r\n\t\t\tbackground:black,\r\n\t\t\ttextAlign:'end',\r\n\t\t\tcolor:white,\r\n\t\t},\r\n\t\tright:{\r\n\t\t\twidth:'50%',\r\n\t\t\tbackground:white,\r\n\t\t\tcolor:black,\r\n\t\t},\r\n\t\ttext:{\r\n\t\t\tfontSize:50,\r\n\t\t\tletterSpacing:3,\r\n\t\t\tmargin:'5vh 2.5vw',\r\n\t\t}\r\n});\r\n\r\n\r\nfunction Home() {\r\n\tconst classes = useStyles();\r\n\tconst squares = useRef();\r\n\tconst [renderedSquare, setRenderedSquare] = useState();\r\n\r\n\tconst renderSquare = (currentSquares) => {\t\t\r\n\t\tfor(let i=0; i<currentSquares.length; i++){\r\n\t\t\tlet s = currentSquares[i];\r\n\t\t\ts.rotation += 0.5;\r\n\t\t\ts.y += s.velocity;\r\n\t\t\tif((s.y+s.size+s.velocity*100)>=window.innerHeight)currentSquares.splice(i,1)\r\n\t\t}\r\n\t\tsetRenderedSquare([...currentSquares])\r\n\t}\t\r\n\r\n\tconst generateSquare = ({maxSize=50, minSize=25},squares) => {\r\n\t\tlet velocity = 0.5;\r\n\t\tlet windowWidth = window.innerWidth;\r\n\t\tlet square = {\r\n\t\t\tsize: Math.floor(25+Math.random()*(maxSize-minSize)),\r\n\t\t\tvelocity, \r\n\t\t\tx: Math.floor((windowWidth-maxSize)*Math.random()),\r\n\t\t\ty:0,\r\n\t\t\trotation:Math.floor(360*Math.random())\r\n\t\t}\r\n\t\tsquares.push(square);\r\n\t}\r\n\r\n\tuseEffect(()=>{\r\n\t\tsquares.current = [];\r\n\t\tsetInterval(()=>{\r\n\t\t\tgenerateSquare({},squares.current)\r\n\t\t},1000)\r\n\t\tsetInterval(()=>{\r\n\t\t\trenderSquare(squares.current)\r\n\t\t},10)\r\n\t}, [])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\t\t\t<div className={classes.left}>\r\n\t\t\t\t<Typography className={classes.text}>Lun's</Typography>\r\n\t\t\t</div>\r\n\t\t\t<div  className={classes.right}>\r\n\t\t\t\t<Typography className={classes.text}>Gallery</Typography>\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\trenderedSquare && renderedSquare.map((s,i)=>(\r\n\t\t\t\t\t<div key={`squre-${i}`} style={{transform:`rotate(${s.rotation}deg)`,position:'absolute',height:s.size,width:s.size,left:s.x,top:s.y,background:'#fff',border:'1px solid black'}}>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))\r\n\t\t\t}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport React from \"react\";\nimport Home from './containers/Home/Home';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}